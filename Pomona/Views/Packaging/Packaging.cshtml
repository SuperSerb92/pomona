@{
    Layout = null;
}

@{ await Html.RenderPartialAsync("PopupMessage"); }
@{ await Html.RenderPartialAsync("PopupMessageYesNo"); }
@using (Html.BeginForm())
{
    @(Html.DevExtreme().DataGrid<Pomona.Models.Packaging>()
                                          .ID("packagingGrid")
                                          .ShowBorders(true)
                                           .ElementAttr("overflow", "auto")
                                          .ShowColumnHeaders(true)
                                          .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
                                          .ColumnMinWidth(50)
                                          .ColumnResizingMode(ColumnResizingMode.Widget)
                                          .DataSource(d => d.Mvc().Controller("Packaging")
                                          .LoadAction("GetPackagings")
                                          .InsertAction("InsertPackaging")
                                          .UpdateAction("UpdatePackaging")
                                          .DeleteAction("DeletePackaging")
                                          .Key("PackagingId"))
                                          .Columns(columns =>
                                          {
                                              columns.AddFor(u => u.PackagingType).Option("required", true).Caption("Tip ambalaže");
                                              columns.AddFor(u => u.Tara).Caption("Tara (kg)").Format("#,##0.000");
                                              columns.Add()
                                                .Type(GridCommandColumnType.Buttons)
                                                .Width(120)
                                                .Buttons(b =>
                                                {
                                                    b.Add().Name(GridColumnButtonName.Edit);

                                                    b.Add()
                                                    .Hint("delete")
                                                    .Icon("trash")
                                                    .OnClick("onPrepareDeletePackaging");
                                                });
                                          })
                                          .Editing(editing =>
                                          {
                                              editing.Mode(GridEditMode.Row);
                                              editing.AllowAdding(true);
                                              editing.ConfirmDelete(false);
                                              editing.AllowUpdating(true);
                                          })
                                          .Paging(p => p.PageSize(10))
                                          .Pager(pager =>
                                          {
                                              pager.ShowPageSizeSelector(true);
                                              pager.AllowedPageSizes(new[] { 10, 50, 100 });
                                          })
                                          .Summary(s => s
                                          .TotalItems(totalItems =>
                                          {
                                              totalItems.Add()
                                                     .Column("PackagingName")
                                                     .Name("PackagingSummary")
                                                     .SummaryType(SummaryType.Sum).DisplayFormat("Broj redova: " + ": {0}")
                                                     .CustomizeText("PackagingCountPerPage");
                                          }))
                                         .FilterRow(f => f.Visible(true))
                                         .HeaderFilter(f => f.Visible(true))
                                         .FocusedRowEnabled(true)
                                        .OnRowInserting("onRowInsertingPackaging")
                                        .OnRowUpdating("onRowUpdatingPackaging")
                                         .OnToolbarPreparing("onToolbarPreparingPackaging")
                                         .OnInitNewRow("function(e) { e.data.Tara = 0; }")
                                         // .OnFocusedRowChanged("OnFocusedRowChangedPackagings")
                                         // .OnEditorPreparing("onPackagingsGridEditorPreparing")
                                         )
}